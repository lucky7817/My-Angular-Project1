{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  loginHandler() {\n    throw new Error('Method not implemented.');\n  }\n  get isLoggedIn() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.USER_KEY = '[user]';\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n  login() {\n    this.user = {\n      username: 'dilyan@gmail.com',\n      firstname: 'Dilyan'\n    };\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n  }\n  logout() {\n    this.user = undefined;\n    localStorage.removeItem(this.USER_KEY);\n  }\n  createPictureAbstract(picName, pickMaterials, picCategory, picImage, picPrice, picDescription) {\n    return this.http.post(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/abstract.json`, {\n      picName,\n      pickMaterials,\n      picCategory,\n      picImage,\n      picPrice,\n      picDescription\n    });\n  }\n  createUserAbstract(_id, username, firstname, secondname, lastname, email, phone, country, place, postcode, street, password, rePassword) {\n    return this.http.post('https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/users.json', {\n      _id,\n      username,\n      firstname,\n      secondname,\n      lastname,\n      email,\n      phone,\n      country,\n      place,\n      postcode,\n      street,\n      password,\n      rePassword\n    });\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","loginHandler","Error","isLoggedIn","user","constructor","http","USER_KEY","lsUser","localStorage","getItem","JSON","parse","error","undefined","login","username","firstname","setItem","stringify","logout","removeItem","createPictureAbstract","picName","pickMaterials","picCategory","picImage","picPrice","picDescription","post","createUserAbstract","_id","secondname","lastname","email","phone","country","place","postcode","street","password","rePassword","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\GitHub JS\\My-Angular-Project1\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IPicture, IUser, IUserLog } from '../shared/interfaces';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  loginHandler() {\n    throw new Error('Method not implemented.');\n  }\n\n  user: IUserLog | undefined;\n  USER_KEY = '[user]';\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  constructor(private http: HttpClient) {\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n\n  login(): void {\n    this.user = {\n      username: 'dilyan@gmail.com',\n      firstname: 'Dilyan',\n    };\n\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n  }\n\n  logout(): void {\n    this.user = undefined;\n    localStorage.removeItem(this.USER_KEY);\n  }\n\n  createPictureAbstract(picName: string, pickMaterials: string, picCategory: string,\n    picImage: string, picPrice: number, picDescription: string) {\n    return this.http.post<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/abstract.json`,\n    { picName, pickMaterials, picCategory, picImage, picPrice, picDescription });\n\n   }\n\n   createUserAbstract(_id: string, username: string, firstname: string,\n    secondname: string, lastname: string, email: string, phone: string,\n     country: string, place: string, postcode: string, street: string, password: string,\n     rePassword: string) {\n    return this.http.post<IUser[]>('https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/users.json',\n    { _id, username, firstname, secondname, lastname, email, phone, country, place,\n    postcode, street, password, rePassword });\n\n   }\n   \n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAEtBC,YAAYA,CAAA;IACV,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAKA,IAAIC,UAAUA,CAAA;IACZ,OAAO,CAAC,CAAC,IAAI,CAACC,IAAI;EACpB;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANxB,KAAAC,QAAQ,GAAG,QAAQ;IAOjB,IAAI;MACF,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACH,QAAQ,CAAC,IAAI,EAAE;MACxD,IAAI,CAACH,IAAI,GAAGO,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;KAC/B,CAAC,OAAOK,KAAK,EAAE;MACd,IAAI,CAACT,IAAI,GAAGU,SAAS;;EAEzB;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACX,IAAI,GAAG;MACVY,QAAQ,EAAE,kBAAkB;MAC5BC,SAAS,EAAE;KACZ;IAEDR,YAAY,CAACS,OAAO,CAAC,IAAI,CAACX,QAAQ,EAAEI,IAAI,CAACQ,SAAS,CAAC,IAAI,CAACf,IAAI,CAAC,CAAC;EAChE;EAEAgB,MAAMA,CAAA;IACJ,IAAI,CAAChB,IAAI,GAAGU,SAAS;IACrBL,YAAY,CAACY,UAAU,CAAC,IAAI,CAACd,QAAQ,CAAC;EACxC;EAEAe,qBAAqBA,CAACC,OAAe,EAAEC,aAAqB,EAAEC,WAAmB,EAC/EC,QAAgB,EAAEC,QAAgB,EAAEC,cAAsB;IAC1D,OAAO,IAAI,CAACtB,IAAI,CAACuB,IAAI,CAAW,+FAA+F,EAC/H;MAAEN,OAAO;MAAEC,aAAa;MAAEC,WAAW;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAc,CAAE,CAAC;EAE7E;EAEAE,kBAAkBA,CAACC,GAAW,EAAEf,QAAgB,EAAEC,SAAiB,EAClEe,UAAkB,EAAEC,QAAgB,EAAEC,KAAa,EAAEC,KAAa,EACjEC,OAAe,EAAEC,KAAa,EAAEC,QAAgB,EAAEC,MAAc,EAAEC,QAAgB,EAClFC,UAAkB;IACnB,OAAO,IAAI,CAACnC,IAAI,CAACuB,IAAI,CAAU,4FAA4F,EAC3H;MAAEE,GAAG;MAAEf,QAAQ;MAAEC,SAAS;MAAEe,UAAU;MAAEC,QAAQ;MAAEC,KAAK;MAAEC,KAAK;MAAEC,OAAO;MAAEC,KAAK;MAC9EC,QAAQ;MAAEC,MAAM;MAAEC,QAAQ;MAAEC;IAAU,CAAE,CAAC;EAE1C;;AAnDUzC,WAAW,C;mBAAXA,WAAW,EAAA0C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAX7C,WAAW,C;SAAXA,WAAW;EAAA8C,OAAA,EAAX9C,WAAW,CAAA+C,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}