{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/enveronments/environment-development';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst {\n  apiUrl\n} = environment;\nexport class AuthService {\n  get isLoggedIn() {\n    return !!this.user;\n  }\n  constructor(http) {\n    this.http = http;\n    this.user$$ = new BehaviorSubject(undefined);\n    this.user$ = this.user$$.asObservable();\n    this.usersList = [];\n    this.USER_KEY = '[user]';\n    this.currentUser = undefined;\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n      this.currentUser = this.user?.username;\n      console.log(this.user?.username);\n      console.log(this.currentUser);\n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n  login(myUser) {\n    this.user = {\n      username: myUser,\n      password: '11111111'\n    };\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n    // const headers = new HttpHeaders().set('content-type', 'application/json')\n    // .set('Access-Control-Allow-Origin', 'true');\n    // return this.http\n    // .post<IGetUser>('/api/login', { username, password })\n    // .pipe(tap((user) => this.user$$.next(user)));\n  }\n\n  logout() {\n    this.user = undefined;\n    // return this.http\n    // .post<IGetUser>('/api/logout', {})\n    // .pipe(tap(() => this.user$$.next(undefined)));\n    localStorage.removeItem(this.USER_KEY);\n  }\n  createPicture(picName, pickMaterials, picCategory, picImage, picPrice, picDescription) {\n    return this.http.post(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/${picCategory}.json`, {\n      picName,\n      pickMaterials,\n      picCategory,\n      picImage,\n      picPrice,\n      picDescription\n    });\n  }\n  createUser(username, firstname, secondname, lastname, email, phone, country, place, postcode, street, password, rePassword) {\n    return this.http.post(`${apiUrl}/users.json`, {\n      username,\n      firstname,\n      secondname,\n      lastname,\n      email,\n      phone,\n      country,\n      place,\n      postcode,\n      street,\n      password,\n      rePassword\n    }).pipe(tap(user => this.user$$.next(user)));\n  }\n  // getPicture(id: string) {\n  //   return this.http.get<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/abstract/${id}.json`)\n  // }\n  getUsers() {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}/users.json`).pipe(map(resData => {\n      const usersArray = [];\n      for (const key in resData) {\n        if (resData.hasOwnProperty(key)) {\n          usersArray.push({\n            userId: key,\n            ...resData[key]\n          });\n        }\n      }\n      return usersArray;\n    })).subscribe({\n      next: users => {\n        this.usersList = users;\n        console.log(this.usersList);\n      },\n      error: err => {\n        // this.isLoading = false;\n        console.log(`Error: ${err}`);\n      }\n    });\n  }\n  getUserDetails(id) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}/users/${id}.json`).pipe(map(resData => {\n      const usersArray = [];\n      for (const key in resData) {\n        if (resData.hasOwnProperty(key)) {\n          usersArray.push({\n            userId: key,\n            ...resData[key]\n          });\n        }\n      }\n      return usersArray;\n    }));\n    // .subscribe({\n    //   next: (users) => {\n    //     this.usersList = users;\n    //     console.log(this.usersList);\n    //   },\n    //   error: (err) => {\n    //     // this.isLoading = false;\n    //     console.log(`Error: ${err}`);\n    //   },\n    // });  \n  }\n\n  getUser(loggedUser) {\n    return this.http.get(`${apiUrl}/users/${loggedUser}.json`);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","tap","environment","BehaviorSubject","apiUrl","AuthService","isLoggedIn","user","constructor","http","user$$","undefined","user$","asObservable","usersList","USER_KEY","currentUser","lsUser","localStorage","getItem","JSON","parse","username","console","log","error","login","myUser","password","setItem","stringify","logout","removeItem","createPicture","picName","pickMaterials","picCategory","picImage","picPrice","picDescription","post","createUser","firstname","secondname","lastname","email","phone","country","place","postcode","street","rePassword","pipe","next","getUsers","get","resData","usersArray","key","hasOwnProperty","push","userId","subscribe","users","err","getUserDetails","id","getUser","loggedUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\GitHub JS\\My-Angular-Project1\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { IGetUser, IPicture, IUser, IUserLog } from '../shared/interfaces';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { environment } from 'src/enveronments/environment-development';\nimport { BehaviorSubject } from 'rxjs';\n\nconst { apiUrl } = environment;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private user$$ = new BehaviorSubject<IGetUser | undefined>(undefined);\n\n  user$ = this.user$$.asObservable();\n\n  usersList: IUser[] = [];\n  \n\n  // loginHandler() {\n  //   throw new Error('Method not implemented.');\n  // }\n\n  user: IUserLog | undefined;\n  USER_KEY = '[user]';\n\n  currentUser: string | undefined = undefined;\n\n  get isLoggedIn(): boolean {\n    return !!this.user;\n  }\n\n  constructor(private http: HttpClient) {\n    try {\n      const lsUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(lsUser);\n      this.currentUser = this.user?.username\n      console.log(this.user?.username);\n      console.log(this.currentUser);\n      \n    } catch (error) {\n      this.user = undefined;\n    }\n  }\n\n  login(myUser: string): void {\n    this.user = {\n      username: myUser,\n      password: '11111111',\n    };\n\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n    // const headers = new HttpHeaders().set('content-type', 'application/json')\n    // .set('Access-Control-Allow-Origin', 'true');\n    // return this.http\n    // .post<IGetUser>('/api/login', { username, password })\n    // .pipe(tap((user) => this.user$$.next(user)));\n\n  }\n\n  logout() {\n    this.user = undefined;\n    // return this.http\n    // .post<IGetUser>('/api/logout', {})\n    // .pipe(tap(() => this.user$$.next(undefined)));\n    localStorage.removeItem(this.USER_KEY);\n  }\n\n\n  createPicture(picName: string, pickMaterials: string, picCategory: string,\n    picImage: string, picPrice: number, picDescription: string) {\n    return this.http.post<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/${picCategory}.json`,\n      { picName, pickMaterials, picCategory, picImage, picPrice, picDescription });\n  }\n\n  createUser(username: string, firstname: string,\n    secondname: string, lastname: string, email: string, phone: string,\n    country: string, place: string, postcode: string, street: string, password: string,\n    rePassword: string) {\n    return this.http.post<IGetUser>(`${apiUrl}/users.json`,\n      {\n        username, firstname, secondname, lastname, email, phone, country, place,\n        postcode, street, password, rePassword\n      })\n      .pipe(tap((user) => this.user$$.next(user)));\n  }\n\n  // getPicture(id: string) {\n  //   return this.http.get<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/abstract/${id}.json`)\n\n  // }\n\n  getUsers() {\n    const { apiUrl } = environment;\n    return this.http.get<{ [userId: string]: IUser }>(`${apiUrl}/users.json`)\n      .pipe(map(resData => {\n        const usersArray = [];\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key)) {\n            usersArray.push({ userId: key, ...resData[key] })\n          }\n        }\n        return usersArray\n      }))\n      .subscribe({\n        next: (users) => {\n          this.usersList = users;\n          console.log(this.usersList);\n        },\n        error: (err) => {\n          // this.isLoading = false;\n          console.log(`Error: ${err}`);\n        },\n      });  \n  }\n\n  getUserDetails(id: string) {\n    const { apiUrl } = environment;\n    return this.http.get<{ [userId: string]: IGetUser }>(`${apiUrl}/users/${id}.json`)\n      .pipe(map(resData => {\n        const usersArray = [];\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key)) {\n            usersArray.push({ userId: key, ...resData[key] })\n          }\n        }\n        return usersArray\n      }))\n      // .subscribe({\n      //   next: (users) => {\n      //     this.usersList = users;\n      //     console.log(this.usersList);\n      //   },\n      //   error: (err) => {\n      //     // this.isLoading = false;\n      //     console.log(`Error: ${err}`);\n      //   },\n      // });  \n  }\n\n  getUser(loggedUser: string) {\n    return this.http.get<IUser>(`${apiUrl}/users/${loggedUser}.json`)\n  }\n\n}\n\n\n// const object = {\n//   name: \"John\",\n//   age: 30\n// };\n\n// if (Object.keys(object).some((key) => object[key] === \"John\")) {\n//   console.log(\"Value exists\");\n// } else {\n//   console.log(\"Value does not exist\");\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}