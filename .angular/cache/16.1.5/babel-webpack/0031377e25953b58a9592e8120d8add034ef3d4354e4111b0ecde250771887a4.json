{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"../account/account.component\";\nexport class EditAccountComponent {\n  constructor(fb, router, authService, activatedRoute, accountComponent) {\n    this.fb = fb;\n    this.router = router;\n    this.authService = authService;\n    this.activatedRoute = activatedRoute;\n    this.accountComponent = accountComponent;\n    this.showEditMode = false;\n    this.isLoading = true;\n    this.form = this.fb.group({\n      username: [this.accountComponent.userInfo.username, [Validators.required, Validators.minLength(5)]],\n      firstname: ['', [Validators.required, Validators.minLength(2)]],\n      secondname: ['', [Validators.required, Validators.minLength(2)]],\n      lastname: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required]],\n      phone: ['', [Validators.required, Validators.minLength(9)]],\n      country: ['', [Validators.required, Validators.minLength(2)]],\n      place: ['', [Validators.required, Validators.minLength(2)]],\n      postcode: ['', [Validators.required, Validators.minLength(2)]],\n      street: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  toggleEditMode() {\n    this.showEditMode = !this.showEditMode;\n  }\n  saveAccount() {\n    if (this.form.invalid) {\n      return;\n    }\n    this.accountComponent.userInfo = {\n      ...this.form.value\n    };\n    this.toggleEditMode();\n  }\n  closeAccountForm() {\n    this.router.navigate([\"/auth/profile\"]);\n  }\n}\nEditAccountComponent.ɵfac = function EditAccountComponent_Factory(t) {\n  return new (t || EditAccountComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i4.AccountComponent));\n};\nEditAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditAccountComponent,\n  selectors: [[\"app-edit-account\"]],\n  decls: 2,\n  vars: 0,\n  template: function EditAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"edit-account works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","EditAccountComponent","constructor","fb","router","authService","activatedRoute","accountComponent","showEditMode","isLoading","form","group","username","userInfo","required","minLength","firstname","secondname","lastname","email","phone","country","place","postcode","street","toggleEditMode","saveAccount","invalid","value","closeAccountForm","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","AuthService","ActivatedRoute","i4","AccountComponent","selectors","decls","vars","template","EditAccountComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\GitHub JS\\My-Angular-Project1\\src\\app\\auth\\edit-account\\edit-account.component.ts","C:\\GitHub JS\\My-Angular-Project1\\src\\app\\auth\\edit-account\\edit-account.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { AccountComponent } from '../account/account.component';\n\n@Component({\n  selector: 'app-edit-account',\n  templateUrl: './edit-account.component.html',\n  styleUrls: ['./edit-account.component.css']\n})\nexport class EditAccountComponent {\n\n  showEditMode: boolean = false;\n  isLoading: boolean = true;\n\n\n  form = this.fb.group({\n    username: [this.accountComponent.userInfo.username, [Validators.required, Validators.minLength(5)]],\n    firstname: ['', [Validators.required, Validators.minLength(2)]],\n    secondname: ['', [Validators.required, Validators.minLength(2)]],\n    lastname: ['', [Validators.required, Validators.minLength(2)]],\n    email: ['', [Validators.required]],\n    phone: ['', [Validators.required, Validators.minLength(9)]],\n    country: ['', [Validators.required, Validators.minLength(2)]],\n    place: ['', [Validators.required, Validators.minLength(2)]],\n    postcode: ['', [Validators.required, Validators.minLength(2)]],\n    street: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  constructor(private fb: FormBuilder, private router: Router,\n    private authService: AuthService, private activatedRoute: ActivatedRoute,\n    public accountComponent: AccountComponent) {\n      \n    }\n   \n\n    toggleEditMode(): void {\n      this.showEditMode = !this.showEditMode;\n    }\n\n    saveAccount(): void {\n      if (this.form.invalid) { return; }\n  \n      this.accountComponent.userInfo = { ...this.form.value } as IUser;\n  \n      this.toggleEditMode();\n    }\n\n    closeAccountForm(): void {\n      this.router.navigate([\"/auth/profile\"]);\n    }\n\n}\n","<p>edit-account works!</p>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}