{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../picture-details/picture-details.component\";\nimport * as i3 from \"src/app/api.service\";\nimport * as i4 from \"@angular/forms\";\nexport class EditPictureComponent {\n  constructor(router, activatedRoute, pictureDetailsComponent, apiService) {\n    this.router = router;\n    this.activatedRoute = activatedRoute;\n    this.pictureDetailsComponent = pictureDetailsComponent;\n    this.apiService = apiService;\n  }\n  // cancel(): void {\n  //   this.router.navigate([\"/auth/profile\"]);\n  // }\n  ngOnInit() {\n    const id = this.activatedRoute.snapshot.params['picId'];\n    // this.myPicture = this.pictureDetailsComponent.myCurrPicture;\n    // console.log(this.myPicture);\n    const url = this.router.routerState.snapshot.url;\n    let regExp = /(\\/[a-zA-Z]*)(\\/[a-zA-Z]*\\/)([a-zA-Z]*)/gm;\n    const result = regExp.exec(url);\n    const myId = '-NazG10UmADgX6d29RO2';\n    this.apiService.getPictureToBeEdit('abstract', myId).subscribe({\n      next: pic => {\n        this.myPicture = pic;\n      },\n      error: err => {\n        console.log(`Error: ${err} `);\n      }\n    });\n  }\n}\nEditPictureComponent.ɵfac = function EditPictureComponent_Factory(t) {\n  return new (t || EditPictureComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PictureDetailsComponent), i0.ɵɵdirectiveInject(i3.ApiService));\n};\nEditPictureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditPictureComponent,\n  selectors: [[\"app-edit-picture\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"create\"], [1, \"field\", \"field-icon\"], [\"for\", \"picName\", 1, \"field-user\"], [\"type\", \"text\", \"name\", \"picName\", \"id\", \"picName\", \"placeholder\", \"Name of picture or short introduction*\", 1, \"input-error\", 3, \"ngModel\", \"ngModelChange\"], [1, \"cancel\"], [1, \"public\"]],\n  template: function EditPictureComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"fieldset\")(2, \"h2\");\n      i0.ɵɵtext(3, \"Edit Picture\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function EditPictureComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.myPicture = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 5);\n      i0.ɵɵtext(11, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.myPicture);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EditPictureComponent","constructor","router","activatedRoute","pictureDetailsComponent","apiService","ngOnInit","id","snapshot","params","url","routerState","regExp","result","exec","myId","getPictureToBeEdit","subscribe","next","pic","myPicture","error","err","console","log","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","PictureDetailsComponent","i3","ApiService","selectors","decls","vars","consts","template","EditPictureComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditPictureComponent_Template_input_ngModelChange_7_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\GitHub JS\\My-Angular-Project1\\src\\app\\pictures\\edit-picture\\edit-picture.component.ts","C:\\GitHub JS\\My-Angular-Project1\\src\\app\\pictures\\edit-picture\\edit-picture.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PictureDetailsComponent } from '../picture-details/picture-details.component';\nimport { ApiService } from 'src/app/api.service';\nimport { IPicture } from 'src/app/shared/interfaces';\n\n@Component({\n  selector: 'app-edit-picture',\n  templateUrl: './edit-picture.component.html',\n  styleUrls: ['./edit-picture.component.css']\n})\nexport class EditPictureComponent implements OnInit{\n\n  // myPicture: any;\n\n  myPicture: IPicture | undefined;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    private pictureDetailsComponent: PictureDetailsComponent,\n    private apiService: ApiService) {}\n\n  // cancel(): void {\n  //   this.router.navigate([\"/auth/profile\"]);\n    \n  // }\n\n  ngOnInit(): void {\n\n    const id: string = this.activatedRoute.snapshot.params['picId'];\n    // this.myPicture = this.pictureDetailsComponent.myCurrPicture;\n    // console.log(this.myPicture);\n    \n\n    const url = this.router.routerState.snapshot.url;\n    let regExp = /(\\/[a-zA-Z]*)(\\/[a-zA-Z]*\\/)([a-zA-Z]*)/gm\n    const result: any = regExp.exec(url);\n\n    const myId = '-NazG10UmADgX6d29RO2'\n\n    this.apiService.getPictureToBeEdit('abstract', myId)\n    .subscribe({\n      next: (pic) => {\n        this.myPicture = pic;\n      },\n      error: (err) => {\n        console.log(`Error: ${err} `);\n      }\n    })\n    \n    \n  }\n\n}\n","<form class=\"create\">\n    <fieldset>\n        <h2>Edit Picture</h2>\n\n        <!-- name -->\n        <p class=\"field field-icon\">\n            <label for=\"picName\" class=\"field-user\">Name</label>\n            <input [(ngModel)]=\"myPicture\" class=\"input-error\" type=\"text\" name=\"picName\"\n                 id=\"picName\" placeholder=\"Name of picture or short introduction*\">\n        </p>\n        <button class=\"cancel\">Cancel</button>\n        <button class=\"public\">Save</button>\n    </fieldset>\n</form>"],"mappings":";;;;;AAWA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,MAAc,EAAUC,cAA8B,EAChEC,uBAAgD,EAChDC,UAAsB;IAFZ,KAAAH,MAAM,GAANA,MAAM;IAAkB,KAAAC,cAAc,GAAdA,cAAc;IAChD,KAAAC,uBAAuB,GAAvBA,uBAAuB;IACvB,KAAAC,UAAU,GAAVA,UAAU;EAAe;EAEnC;EACA;EAEA;EAEAC,QAAQA,CAAA;IAEN,MAAMC,EAAE,GAAW,IAAI,CAACJ,cAAc,CAACK,QAAQ,CAACC,MAAM,CAAC,OAAO,CAAC;IAC/D;IACA;IAGA,MAAMC,GAAG,GAAG,IAAI,CAACR,MAAM,CAACS,WAAW,CAACH,QAAQ,CAACE,GAAG;IAChD,IAAIE,MAAM,GAAG,2CAA2C;IACxD,MAAMC,MAAM,GAAQD,MAAM,CAACE,IAAI,CAACJ,GAAG,CAAC;IAEpC,MAAMK,IAAI,GAAG,sBAAsB;IAEnC,IAAI,CAACV,UAAU,CAACW,kBAAkB,CAAC,UAAU,EAAED,IAAI,CAAC,CACnDE,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,SAAS,GAAGD,GAAG;MACtB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAAC,UAAUF,GAAG,GAAG,CAAC;MAC/B;KACD,CAAC;EAGJ;;AAvCWtB,oBAAoB,C;mBAApBA,oBAAoB,EAAAyB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,cAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,uBAAA,GAAAN,EAAA,CAAAC,iBAAA,CAAAM,EAAA,CAAAC,UAAA;AAAA;AAApBjC,oBAAoB,C;QAApBA,oBAAoB;EAAAkC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXjCf,EAAA,CAAAiB,cAAA,cAAqB;MAETjB,EAAA,CAAAkB,MAAA,mBAAY;MAAAlB,EAAA,CAAAmB,YAAA,EAAK;MAGrBnB,EAAA,CAAAiB,cAAA,WAA4B;MACgBjB,EAAA,CAAAkB,MAAA,WAAI;MAAAlB,EAAA,CAAAmB,YAAA,EAAQ;MACpDnB,EAAA,CAAAiB,cAAA,eACuE;MADhEjB,EAAA,CAAAoB,UAAA,2BAAAC,6DAAAC,MAAA;QAAA,OAAAN,GAAA,CAAArB,SAAA,GAAA2B,MAAA;MAAA,EAAuB;MAA9BtB,EAAA,CAAAmB,YAAA,EACuE;MAE3EnB,EAAA,CAAAiB,cAAA,gBAAuB;MAAAjB,EAAA,CAAAkB,MAAA,aAAM;MAAAlB,EAAA,CAAAmB,YAAA,EAAS;MACtCnB,EAAA,CAAAiB,cAAA,iBAAuB;MAAAjB,EAAA,CAAAkB,MAAA,YAAI;MAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;MAJzBnB,EAAA,CAAAuB,SAAA,GAAuB;MAAvBvB,EAAA,CAAAwB,UAAA,YAAAR,GAAA,CAAArB,SAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}