{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from 'src/enveronments/environment-development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  // items: IPicture[] = [];\n  // items: IPicture[] = [];\n  constructor(http) {\n    this.http = http;\n    this.picturesList2 = [];\n    this.items = [];\n  }\n  getPictures(picturePath) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}/${picturePath}.json`).pipe(map(resData => {\n      const picturesArray = [];\n      for (const key in resData) {\n        if (resData.hasOwnProperty(key)) {\n          picturesArray.push({\n            picId: key,\n            ...resData[key]\n          });\n        }\n      }\n      return picturesArray;\n    }));\n  }\n  getPicture(category, id) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}${category}${id}.json`);\n  }\n  // getWhatYouSearch(searchValue: string): Observable<SearchInterface[]> {\n  //   return this.http.get<SearchInterface[]>\n  // }\n  createItemInMyCart(picName, picImage, picPrice, picDescription) {\n    return this.http.post(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/MyCart.json`, {\n      picName,\n      picImage,\n      picPrice,\n      picDescription\n    });\n  }\n  getPicToBeAddToCart(category, id) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`${apiUrl}${category}${id}.json`);\n    // .subscribe({\n    //   next: (pic) => {\n    //   this.pictureToCart = pic;\n    // console.log(this.pictureToCart);\n    // this.items.push(this.pictureToCart);   \n    //   },\n    //   error: (err) => {\n    //     console.log(`Error: ${err}`);\n    //   },\n    // })\n    // this.items.push(picture);\n  }\n\n  getItemFromMyCart(id) {\n    const {\n      apiUrl\n    } = environment;\n    return this.http.get(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/MyCart/${id}.json`).subscribe({\n      next: pic => {\n        this.getPicFromCart = pic;\n        this.items.push(this.getPicFromCart);\n      },\n      error: err => {\n        console.log(`Error: ${err} `);\n      }\n    });\n    // .pipe(map(resData => {\n    //   for (const key in resData) {\n    //     if (resData.hasOwnProperty(key)) {\n    //       this.items.push({ picId: key, ...resData[key] })\n    //     }\n    //   }\n    //   return this.items\n    // }))\n  }\n\n  getItems() {\n    return this.items;\n  }\n  itemsCount() {\n    return this.items.length;\n  }\n  clearCart() {\n    this.items = [];\n  }\n  editPicture(picName, pickMaterials, picCategory, picImage, picPrice, picDescription, id) {\n    return this.http.put(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/${picCategory}${id}.json`, {\n      picName,\n      pickMaterials,\n      picCategory,\n      picImage,\n      picPrice,\n      picDescription,\n      id\n    });\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","environment","ApiService","constructor","http","picturesList2","items","getPictures","picturePath","apiUrl","get","pipe","resData","picturesArray","key","hasOwnProperty","push","picId","getPicture","category","id","createItemInMyCart","picName","picImage","picPrice","picDescription","post","getPicToBeAddToCart","getItemFromMyCart","subscribe","next","pic","getPicFromCart","error","err","console","log","getItems","itemsCount","length","clearCart","editPicture","pickMaterials","picCategory","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\GitHub JS\\My-Angular-Project1\\src\\app\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { IGetPicture, IPicture } from './shared/interfaces';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/enveronments/environment-development';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  picturesList2: IGetPicture[] = []\n\n  pictureToCart: IPicture | undefined;\n  getPicFromCart: IPicture | undefined;\n\n  items: IPicture[] = [];\n  // items: IPicture[] = [];\n\n  // items: IPicture[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  getPictures(picturePath: string) {\n    const { apiUrl } = environment;\n    return this.http.get<{ [picId: string]: IGetPicture }>(`${apiUrl}/${picturePath}.json`)\n      .pipe(map(resData => {\n        const picturesArray = [];\n        for (const key in resData) {\n          if (resData.hasOwnProperty(key)) {\n            picturesArray.push({ picId: key, ...resData[key] })\n          }\n        }\n        return picturesArray\n      }))\n  }\n\n\n  getPicture(category: string, id: string) {\n    const { apiUrl } = environment;\n    return this.http.get<IPicture>(`${apiUrl}${category}${id}.json`)\n  }\n\n  // getWhatYouSearch(searchValue: string): Observable<SearchInterface[]> {\n  //   return this.http.get<SearchInterface[]>\n  // }\n\n  createItemInMyCart(picName: string, picImage: string,\n    picPrice: number, picDescription: string) {\n    return this.http.post<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/MyCart.json`,\n      { picName, picImage, picPrice, picDescription });\n  }\n\n  getPicToBeAddToCart(category: string, id: string) {\n    const { apiUrl } = environment;\n    return this.http.get<IPicture>(`${apiUrl}${category}${id}.json`)\n    // .subscribe({\n    //   next: (pic) => {\n    //   this.pictureToCart = pic;\n    // console.log(this.pictureToCart);\n    // this.items.push(this.pictureToCart);   \n    //   },\n    //   error: (err) => {\n    //     console.log(`Error: ${err}`);\n    //   },\n    // })\n    // this.items.push(picture);\n  }\n\n  getItemFromMyCart(id: string) {\n    const { apiUrl } = environment;\n    return this.http.get<IPicture>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/MyCart/${id}.json`)\n      .subscribe({\n        next: (pic) => {\n          this.getPicFromCart = pic;\n          this.items.push(this.getPicFromCart);\n        },\n        error: (err) => {\n          console.log(`Error: ${err} `);\n        }\n      })\n    // .pipe(map(resData => {\n\n    //   for (const key in resData) {\n    //     if (resData.hasOwnProperty(key)) {\n    //       this.items.push({ picId: key, ...resData[key] })\n    //     }\n    //   }\n    //   return this.items\n    // }))\n\n  }\n\n\n  getItems() {\n    return this.items;\n  }\n\n  itemsCount() {\n    return this.items.length;\n  }\n\n  clearCart() {\n    this.items = [];\n  }\n\n  editPicture(picName: string, pickMaterials: string, picCategory: string,\n    picImage: string, picPrice: number, picDescription: string, id: string) {\n    return this.http.put<any>(`https://my-project-angular-4dd57-default-rtdb.europe-west1.firebasedatabase.app/${picCategory}${id}.json`,\n      { picName, pickMaterials, picCategory, picImage, picPrice, picDescription, id });\n  }\n\n  \n\n\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAAQ,0CAA0C;;;AAMtE,OAAM,MAAOC,UAAU;EAQrB;EAEA;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVxB,KAAAC,aAAa,GAAkB,EAAE;IAKjC,KAAAC,KAAK,GAAe,EAAE;EAKkB;EAExCC,WAAWA,CAACC,WAAmB;IAC7B,MAAM;MAAEC;IAAM,CAAE,GAAGR,WAAW;IAC9B,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAmC,GAAGD,MAAM,IAAID,WAAW,OAAO,CAAC,CACpFG,IAAI,CAACX,GAAG,CAACY,OAAO,IAAG;MAClB,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,MAAMC,GAAG,IAAIF,OAAO,EAAE;QACzB,IAAIA,OAAO,CAACG,cAAc,CAACD,GAAG,CAAC,EAAE;UAC/BD,aAAa,CAACG,IAAI,CAAC;YAAEC,KAAK,EAAEH,GAAG;YAAE,GAAGF,OAAO,CAACE,GAAG;UAAC,CAAE,CAAC;;;MAGvD,OAAOD,aAAa;IACtB,CAAC,CAAC,CAAC;EACP;EAGAK,UAAUA,CAACC,QAAgB,EAAEC,EAAU;IACrC,MAAM;MAAEX;IAAM,CAAE,GAAGR,WAAW;IAC9B,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAW,GAAGD,MAAM,GAAGU,QAAQ,GAAGC,EAAE,OAAO,CAAC;EAClE;EAEA;EACA;EACA;EAEAC,kBAAkBA,CAACC,OAAe,EAAEC,QAAgB,EAClDC,QAAgB,EAAEC,cAAsB;IACxC,OAAO,IAAI,CAACrB,IAAI,CAACsB,IAAI,CAAW,6FAA6F,EAC3H;MAAEJ,OAAO;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAc,CAAE,CAAC;EACpD;EAEAE,mBAAmBA,CAACR,QAAgB,EAAEC,EAAU;IAC9C,MAAM;MAAEX;IAAM,CAAE,GAAGR,WAAW;IAC9B,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAW,GAAGD,MAAM,GAAGU,QAAQ,GAAGC,EAAE,OAAO,CAAC;IAChE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEAQ,iBAAiBA,CAACR,EAAU;IAC1B,MAAM;MAAEX;IAAM,CAAE,GAAGR,WAAW;IAC9B,OAAO,IAAI,CAACG,IAAI,CAACM,GAAG,CAAW,0FAA0FU,EAAE,OAAO,CAAC,CAChIS,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZ,IAAI,CAACC,cAAc,GAAGD,GAAG;QACzB,IAAI,CAACzB,KAAK,CAACU,IAAI,CAAC,IAAI,CAACgB,cAAc,CAAC;MACtC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACC,GAAG,CAAC,UAAUF,GAAG,GAAG,CAAC;MAC/B;KACD,CAAC;IACJ;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EAEF;;EAGAG,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC/B,KAAK;EACnB;EAEAgC,UAAUA,CAAA;IACR,OAAO,IAAI,CAAChC,KAAK,CAACiC,MAAM;EAC1B;EAEAC,SAASA,CAAA;IACP,IAAI,CAAClC,KAAK,GAAG,EAAE;EACjB;EAEAmC,WAAWA,CAACnB,OAAe,EAAEoB,aAAqB,EAAEC,WAAmB,EACrEpB,QAAgB,EAAEC,QAAgB,EAAEC,cAAsB,EAAEL,EAAU;IACtE,OAAO,IAAI,CAAChB,IAAI,CAACwC,GAAG,CAAM,mFAAmFD,WAAW,GAAGvB,EAAE,OAAO,EAClI;MAAEE,OAAO;MAAEoB,aAAa;MAAEC,WAAW;MAAEpB,QAAQ;MAAEC,QAAQ;MAAEC,cAAc;MAAEL;IAAE,CAAE,CAAC;EACpF;;AArGWlB,UAAU,C;mBAAVA,UAAU,EAAA2C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAV9C,UAAU,C;SAAVA,UAAU;EAAA+C,OAAA,EAAV/C,UAAU,CAAAgD,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}